(()=>{"use strict";var __webpack_modules__={48:()=>{eval('\n;// CONCATENATED MODULE: ./src/client/js/btn.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// BTN CLASS\n// 1. Btn(추가 장소, 추가 내용)\n// 2. 기본적인 버튼 모양 Btn\n// 3. 버튼 관련된 Styling\n// 4. extends 버튼 모양 BtnActive\n// 5. 버튼 클릭 관련 Animation Styling\nvar Btn = function Btn(content) {\n  var _this = this;\n\n  _classCallCheck(this, Btn);\n\n  _defineProperty(this, "StyleBtn", function () {\n    _this.content.style.cssText = "\\n            box-shadow: inset 0.5px 0.5px 5px 1px #34495e;\\n            font-size: auto;\\n            font-weight: 600;\\n            text-shadow: 5px 5px 5px #2980b9;\\n        ";\n  });\n\n  this.content = content;\n  this.StyleBtn();\n};\nvar BtnActive = function BtnActive(content) {\n  var _this2 = this;\n\n  _classCallCheck(this, BtnActive);\n\n  _defineProperty(this, "StyleBtn", function () {\n    _this2.content.style.cssText = "\\n            box-shadow: 2px 2px 2px 0px #34495e;\\n            font-size: auto;\\n            font-weight: 600;\\n            text-shadow: 5px 5px 5px #2980b9;\\n        ";\n  });\n\n  _defineProperty(this, "addEventListenerClick", function () {\n    _this2.content.addEventListener("mousedown", _this2.handleBtnDown);\n\n    _this2.content.addEventListener("mouseup", _this2.handleBtnUp);\n  });\n\n  _defineProperty(this, "handleBtnDown", function (event) {\n    // Btn Click Down Movement\n    var btn = event.target;\n\n    if (btn.tagName === "I" || btn.tagName === "SPAN") {\n      btn = btn.parentNode;\n    }\n\n    _this2.btnDownAni(btn);\n  });\n\n  _defineProperty(this, "handleBtnUp", function (event) {\n    // Btn Click Up Movement\n    var btn = event.target;\n\n    if (btn.tagName === "I" || btn.tagName === "SPAN") {\n      btn = btn.parentNode;\n    }\n\n    _this2.btnUpAni(btn);\n  });\n\n  _defineProperty(this, "btnDownAni", function (btn) {\n    if (btn.classList.contains("up-btn")) {\n      btn.classList.replace("up-btn", "down-btn");\n    } else {\n      btn.classList.add("down-btn");\n    }\n  });\n\n  _defineProperty(this, "btnUpAni", function (btn) {\n    if (btn.classList.contains("down-btn")) {\n      btn.classList.replace("down-btn", "up-btn");\n    }\n  });\n\n  this.content = content;\n  this.StyleBtn();\n  this.addEventListenerClick();\n};\n;// CONCATENATED MODULE: ./src/client/js/clock.js\nfunction clock_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction clock_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar Clock = function Clock() {\n  var _this = this;\n\n  clock_classCallCheck(this, Clock);\n\n  clock_defineProperty(this, "clockPaint", function () {\n    var date = new Date();\n    var _ref = [date.getHours(), date.getMinutes(), date.getSeconds()],\n        currentHours = _ref[0],\n        currentMinutes = _ref[1],\n        currentSeconds = _ref[2];\n    _this.jsClockTime.innerHTML = "".concat(currentHours < 10 ? "0".concat(currentHours) : currentHours, ":").concat(currentMinutes < 10 ? "0".concat(currentMinutes) : currentMinutes, ":").concat(currentSeconds < 10 ? "0".concat(currentSeconds) : currentSeconds);\n  });\n\n  this.jsClockContainer = document.querySelector("#jsClockContainer");\n  this.jsClockTime = this.jsClockContainer ? this.jsClockContainer.querySelector("#jsClockTime") : null;\n\n  if (this.jsClockContainer) {\n    setInterval(this.clockPaint, 100); // Btn Styling\n\n    new Btn(this.jsClockTime);\n  }\n};\n\nnew Clock();\n;// CONCATENATED MODULE: ./src/client/js/status.js\nfunction status_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction status_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Class\n\nvar Status = function Status() {\n  var _this = this;\n\n  status_classCallCheck(this, Status);\n\n  status_defineProperty(this, "initStatus", function () {\n    // initial count\n    _this.statusCount();\n  });\n\n  status_defineProperty(this, "statusCount", function () {\n    var currentStorage = localStorage.getItem("toDos");\n    var parsedStorage = JSON.parse(currentStorage);\n    var statusList = parsedStorage ? parsedStorage.map(function (item) {\n      return item.completed;\n    }) : [];\n    var trueCount = 0;\n    var falseCount = 0;\n    statusList.forEach(function (item) {\n      if (item === true) {\n        trueCount = trueCount + 1;\n      } else {\n        falseCount = falseCount + 1;\n      }\n    });\n\n    _this.jsSideBarStatusBar.addEventListener("transitionstart", function () {\n      _this.jsSideBarStatusContainer.classList.add("status-focus");\n    });\n\n    _this.jsSideBarStatusBar.addEventListener("transitionend", function () {\n      _this.jsSideBarStatusContainer.classList.remove("status-focus");\n    }); // statusBar update\n\n\n    var widthFraction = trueCount / (trueCount + falseCount);\n    _this.jsSideBarStatusBar.style.width = "".concat(widthFraction * 100, "%");\n  });\n\n  this.jsSideBarStatus = document.querySelector("#jsSideBarStatus");\n  this.jsSideBarStatusContainer = this.jsSideBarStatus ? this.jsSideBarStatus.querySelector("#jsSideBarStatusContainer") : null;\n  this.jsSideBarStatusBar = this.jsSideBarStatusContainer ? this.jsSideBarStatusContainer.querySelector("#jsSideBarStatusBar") : null;\n\n  if (this.jsSideBarStatus) {\n    this.initStatus(); // Btn Styling\n\n    new Btn(this.jsSideBarStatusContainer); // BtnActive Styling\n  }\n} // functions\n;\nnew Status();\n;// CONCATENATED MODULE: ./src/client/js/scroll.js\nfunction scroll_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction scroll_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n // Class\n\nvar Scroll = function Scroll() {\n  var _this = this;\n\n  scroll_classCallCheck(this, Scroll);\n\n  scroll_defineProperty(this, "initSideBar", function () {\n    _this.jsSideBarToDoBtn.addEventListener("click", _this.handleSideBarToDoBtn);\n\n    _this.jsSideBarCompletedBtn.addEventListener("click", _this.handleSideBarCompleted);\n  });\n\n  scroll_defineProperty(this, "handleSideBarToDoBtn", function (event) {\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "SPAN") {\n      targetNode = targetNode.parentNode;\n    } // 할 일 클릭 버튼 숨김\n\n\n    targetNode.classList.remove("show");\n    targetNode.classList.replace("up-btn", "hide-bar");\n    targetNode.disabled = true; // 한 일 클릭 버튼 보여주기\n\n    _this.jsSideBarCompletedBtn.classList.replace("hide-bar", "show");\n\n    _this.jsSideBarCompletedBtn.disabled = false; // 화면 grid 0% ~ 50% 상태 보여주기\n\n    _this.jsMemoContainerToDo.scrollIntoView({\n      behavior: "smooth",\n      block: "start",\n      inline: "start"\n    });\n  });\n\n  scroll_defineProperty(this, "handleSideBarCompleted", function (event) {\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "SPAN") {\n      targetNode = targetNode.parentNode;\n    }\n\n    if (!targetNode.classList.contains("show")) {\n      // 한 일 클릭 버튼 숨김 \n      targetNode.classList.replace("up-btn", "hide-bar");\n      targetNode.disabled = true; // 할 일 클릭 버튼 보여주기\n\n      _this.jsSideBarToDoBtn.classList.replace("init-hide-bar", "show");\n\n      _this.jsSideBarToDoBtn.disabled = false;\n    } else {\n      // 한 일 클릭 버튼 숨김\n      targetNode.classList.remove("show");\n      targetNode.classList.replace("up-btn", "hide-bar");\n      targetNode.disabled = true; // 할 일 클릭 버튼 보여주기\n\n      _this.jsSideBarToDoBtn.classList.replace("hide-bar", "show");\n\n      _this.jsSideBarToDoBtn.disabled = false;\n    } // 화면 grid 50% ~ 100% 상태 보여주기\n\n\n    _this.jsMemoContainerCompleted.scrollIntoView({\n      behavior: "smooth",\n      block: "start",\n      inline: "end"\n    });\n  });\n\n  this.jsSideBarContainer = document.querySelector("#jsSideBarContainer");\n  this.jsSideBarToDo = this.jsSideBarContainer ? this.jsSideBarContainer.querySelector("#jsSideBarToDo") : null;\n  this.jsSideBarToDoBtn = this.jsSideBarToDo ? this.jsSideBarToDo.querySelector("#jsSideBarToDoBtn") : null;\n  this.jsSideBarCompleted = this.jsSideBarContainer ? this.jsSideBarContainer.querySelector("#jsSideBarCompleted") : null;\n  this.jsSideBarCompletedBtn = this.jsSideBarCompleted ? this.jsSideBarCompleted.querySelector("#jsSideBarCompletedBtn") : null;\n  this.jsMemoContainer = document.querySelector("#jsMemoContainer");\n  this.jsMemoContainerToDo = this.jsMemoContainer ? this.jsMemoContainer.querySelector("#jsMemoContainerToDo") : null;\n  this.jsMemoContainerCompleted = this.jsMemoContainer ? this.jsMemoContainer.querySelector("#jsMemoContainerCompleted") : null;\n\n  if (this.jsSideBarContainer && this.jsMemoContainer) {\n    this.initSideBar(); // Btn Styling\n    // BtnActive Styling\n\n    new BtnActive(this.jsSideBarToDoBtn);\n    new BtnActive(this.jsSideBarCompletedBtn);\n  }\n};\n\nnew Scroll();\n;// CONCATENATED MODULE: ./src/client/js/footer.js\nfunction footer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n // Class 생성\n\nvar Footer = function Footer() {\n  footer_classCallCheck(this, Footer);\n\n  this.jsFooterContainer = document.querySelector("#jsFooter");\n  this.jsFooterContent = this.jsFooterContainer ? this.jsFooterContainer.querySelector("#jsFooterContent") : null;\n\n  if (this.jsFooterContainer && this.jsFooterContent) {\n    // Btn Styling\n    new Btn(this.jsFooterContent);\n  }\n};\n\nnew Footer();\n;// CONCATENATED MODULE: ./src/client/js/memo.js\nfunction memo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction memo_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // Class\n\nvar Memo = function Memo() {\n  var _this = this;\n\n  memo_classCallCheck(this, Memo);\n\n  memo_defineProperty(this, "initMemo", function () {\n    // 기존의 localStorage 할 일들 내용 로드\n    var loadedArray = localStorage.getItem(_this.TODOS);\n    var parsedArray;\n\n    if (!loadedArray) {\n      parsedArray = null;\n    } else {\n      parsedArray = JSON.parse(loadedArray);\n    }\n\n    if (parsedArray) {\n      parsedArray.forEach(function (oneMemo) {\n        var initedMemo = {\n          title: oneMemo.title,\n          description: oneMemo.description,\n          id: _this.memoArray.length + 1,\n          completed: oneMemo.completed\n        }; // frontend Process\n\n        if (initedMemo.completed === false) {\n          _this.paintMemo(initedMemo, _this.TODO_FLAG);\n        } else {\n          _this.paintMemo(initedMemo, _this.COMPLETED_FLAG);\n        } // backend Procass\n\n\n        _this.memoArray.push(initedMemo);\n\n        _this.saveMemo(_this.memoArray);\n      });\n    } // memo click Btn 활성화\n\n\n    _this.jsMemoBtn.addEventListener("click", _this.handleAddBtnClick);\n  });\n\n  memo_defineProperty(this, "paintMemo", function (obj, targetList) {\n    // .memo box\n    var divBox = document.createElement("div");\n    divBox.className = "memo";\n    divBox.id = obj.id; // .memo__title box\n\n    var titleBox = document.createElement("h2");\n    titleBox.className = "memo__title";\n    titleBox.innerHTML = obj.title; // .memo__description box\n\n    var descriptionBox = document.createElement("h5");\n    descriptionBox.className = "memo__description";\n    descriptionBox.innerHTML = obj.description; // option button\n\n    var optionBtn = document.createElement("button");\n    optionBtn.classList.add("btn", "memo__option");\n    var optionIcon = document.createElement("i");\n    optionIcon.classList.add("fas", "fa-chevron-right", "fa-lg");\n    optionBtn.appendChild(optionIcon); // BtnAcive Styling\n\n    new BtnActive(optionBtn);\n    optionBtn.addEventListener("click", _this.handleOptionBtnClick); // delete button\n\n    var deleteBtn = document.createElement("button");\n    deleteBtn.classList.add("btn", "memo__delete", "hide");\n    var deleteIcon = document.createElement("i");\n    deleteIcon.classList.add("fas", "fa-trash", "fa-lg");\n    deleteBtn.appendChild(deleteIcon); // BtnAcive Styling\n\n    new BtnActive(deleteBtn);\n    deleteBtn.addEventListener("click", _this.handleDeleteBtnClick); // edit button\n\n    var editBtn = document.createElement("button");\n    editBtn.classList.add("btn", "memo__edit", "hide");\n    var editIcon = document.createElement("i");\n    editIcon.classList.add("fas", "fa-pen", "fa-lg");\n    editBtn.appendChild(editIcon); // BtnAcive Styling\n\n    new BtnActive(editBtn);\n    editBtn.addEventListener("click", _this.handleEditBtnClick);\n    divBox.appendChild(titleBox);\n    divBox.appendChild(descriptionBox);\n    divBox.appendChild(optionBtn);\n    divBox.appendChild(deleteBtn);\n    divBox.appendChild(editBtn); // Btn Styling\n\n    new Btn(divBox);\n\n    if (targetList === _this.TODO_FLAG) {\n      // go to complete button\n      var completeBtn = document.createElement("button");\n      completeBtn.classList.add("btn", "memo__complete", "hide");\n      var completeIcon = document.createElement("i");\n      completeIcon.classList.add("fas", "fa-check", "fa-lg");\n      completeBtn.appendChild(completeIcon); // BtnAcive Styling\n\n      new BtnActive(completeBtn);\n      completeBtn.addEventListener("click", _this.handleCompleteBtnClick); // adding completeBtn\n\n      divBox.appendChild(completeBtn); // adding to toDoSection\n\n      _this.jsNewMemoSection.appendChild(divBox);\n    }\n\n    if (targetList === _this.COMPLETED_FLAG) {\n      // go to toDoBtn\n      var toDoBtn = document.createElement("button");\n      toDoBtn.classList.add("btn", "memo__toDo", "hide");\n      var toDoIcon = document.createElement("i");\n      toDoIcon.classList.add("fas", "fa-reply", "fa-lg");\n      toDoBtn.appendChild(toDoIcon); // BtnAcive Styling\n\n      new BtnActive(toDoBtn);\n      toDoBtn.addEventListener("click", _this.handleToDoBtnClick); // adding toDoBtn\n\n      divBox.appendChild(toDoBtn); // adding to completedSection\n\n      _this.jsNewMemoSectionCompleted.appendChild(divBox);\n    }\n  });\n\n  memo_defineProperty(this, "saveMemo", function (array) {\n    localStorage.setItem(_this.TODOS, JSON.stringify(array));\n  });\n\n  memo_defineProperty(this, "handleDeleteBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    var targetMemo = targetNode.parentNode;\n    var targetId = targetMemo.id; // Delete target in Frontend\n\n    targetMemo.remove(); // Delete target in Backend\n\n    _this.memoArray = _this.memoArray.filter(function (oneMemo) {\n      return oneMemo.id !== parseInt(targetId);\n    });\n    localStorage.setItem(_this.TODOS, JSON.stringify(_this.memoArray)); // Update statusBar\n\n    new Status();\n  });\n\n  memo_defineProperty(this, "handleOptionBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    targetNode.classList.toggle("clicked");\n    var targetContainer = targetNode.parentNode;\n\n    if (targetNode.classList.contains("clicked")) {\n      // show all option Btns\n      var targetHideBtns = targetContainer.querySelectorAll("button.hide");\n      targetHideBtns.forEach(function (targetHideBtn) {\n        targetHideBtn.classList.replace("hide", "show");\n      }); // targetOptionBtn direction changes to left\n\n      var targetIcon = targetNode.querySelector("i");\n\n      if (targetIcon.classList.contains("anticlockwise")) {\n        targetIcon.classList.replace("anticlockwise", "clockwise");\n      } else {\n        targetIcon.classList.add("clockwise");\n      }\n    } else {\n      // hide all option Btns\n      var _targetHideBtns = targetContainer.querySelectorAll("button.show");\n\n      _targetHideBtns.forEach(function (targetHideBtn) {\n        targetHideBtn.classList.replace("show", "hide");\n      }); // targetOptionBtn direction changes to right\n\n\n      var _targetIcon = targetNode.querySelector("i");\n\n      _targetIcon.classList.replace("clockwise", "anticlockwise");\n    }\n  });\n\n  memo_defineProperty(this, "handleEditBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    targetNode.classList.toggle("clicked");\n    var targetContainer = targetNode.parentNode;\n\n    if (targetNode.classList.contains("clicked")) {\n      // replace memo title to input bar\n      var titleContainer = targetContainer.querySelector(".memo__title");\n      var titleInputBar = document.createElement("input");\n      titleInputBar.type = "text";\n      titleInputBar.value = titleContainer.innerHTML;\n      titleInputBar.classList.add("input"); // InputBar Btn Styling\n\n      new Btn(titleInputBar);\n      targetContainer.replaceChild(titleInputBar, titleContainer); // replace memo description to input bar\n\n      var descriptionContainer = targetContainer.querySelector(".memo__description");\n      var descriptionInputBar = document.createElement("input");\n      descriptionInputBar.type = "text";\n      descriptionInputBar.value = descriptionContainer.innerHTML;\n      descriptionInputBar.classList.add("input"); // InputBar Btn Styling\n\n      new Btn(descriptionInputBar);\n      targetContainer.replaceChild(descriptionInputBar, descriptionContainer);\n    } else {\n      var editedInputBars = targetContainer.querySelectorAll("input.input"); // edit on frontend Section\n\n      var editedTitleBox = document.createElement("h2");\n      editedTitleBox.className = "memo__title";\n      editedTitleBox.innerHTML = editedInputBars[0].value;\n      var editedDescriptionBox = document.createElement("h5");\n      editedDescriptionBox.className = "memo__description";\n      editedDescriptionBox.innerHTML = editedInputBars[1].value;\n      targetContainer.replaceChild(editedTitleBox, editedInputBars[0]);\n      targetContainer.replaceChild(editedDescriptionBox, editedInputBars[1]); // edit on backend Section\n\n      var editedContainerId = targetContainer.id;\n      _this.memoArray = _this.memoArray.map(function (oneMemo) {\n        if (oneMemo.id === parseInt(editedContainerId)) {\n          return {\n            title: editedInputBars[0].value,\n            description: editedInputBars[1].value,\n            id: oneMemo.id\n          };\n        } else {\n          return oneMemo;\n        }\n      });\n      localStorage.setItem(_this.TODOS, JSON.stringify(_this.memoArray));\n    }\n  });\n\n  memo_defineProperty(this, "handleCompleteBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    var targetMemo = targetNode.parentNode;\n    var targetId = targetMemo.id; // Delete target on Frontend\n\n    targetMemo.addEventListener("animationend", function () {\n      var _this2 = this;\n\n      targetMemo.classList.add("go-complete-area");\n      setTimeout(function () {\n        return _this2.remove();\n      }, 400);\n    });\n    var goToCompleteObj; // Edit target in Backend\n\n    _this.memoArray = _this.memoArray.map(function (oneMemo) {\n      if (oneMemo.id === parseInt(targetId)) {\n        var newMemoObj = {\n          title: oneMemo.title,\n          description: oneMemo.description,\n          id: oneMemo.id,\n          completed: true\n        };\n        goToCompleteObj = newMemoObj;\n        return newMemoObj;\n      } else {\n        return oneMemo;\n      }\n    });\n    localStorage.setItem(_this.TODOS, JSON.stringify(_this.memoArray)); // Paint target on frontend\n\n    _this.paintMemo(goToCompleteObj, _this.COMPLETED_FLAG); // Update statusBar\n\n\n    new Status();\n  });\n\n  memo_defineProperty(this, "handleToDoBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    var targetMemo = targetNode.parentNode;\n    var targetId = targetMemo.id; // Delete target in Frontend\n\n    targetMemo.addEventListener("animationend", function () {\n      var _this3 = this;\n\n      targetMemo.classList.add("go-toDo-area");\n      setTimeout(function () {\n        return _this3.remove();\n      }, 400);\n    });\n    var goToDoObj; // Edit target in Backend\n\n    _this.memoArray = _this.memoArray.map(function (oneMemo) {\n      if (oneMemo.id === parseInt(targetId)) {\n        var newMemoObj = {\n          title: oneMemo.title,\n          description: oneMemo.description,\n          id: oneMemo.id,\n          completed: false\n        };\n        goToDoObj = newMemoObj;\n        return newMemoObj;\n      } else {\n        return oneMemo;\n      }\n    });\n    localStorage.setItem(_this.TODOS, JSON.stringify(_this.memoArray)); // paint on frontend\n\n    _this.paintMemo(goToDoObj, _this.TODO_FLAG); // Update statusBar\n\n\n    new Status();\n  });\n\n  memo_defineProperty(this, "handleAddBtnClick", function (event) {\n    event.preventDefault();\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    targetNode.classList.toggle("clicked");\n\n    if (targetNode.classList.contains("clicked")) {\n      _this.jsMemoIcon.classList.replace("fa-plus", "fa-check"); // show input\n\n\n      _this.jsMemoInputBox.classList.replace("hide", "show");\n    } else {\n      _this.jsMemoIcon.classList.replace("fa-check", "fa-plus"); // hide input\n\n\n      _this.jsMemoInputBox.classList.replace("show", "hide");\n\n      var idLists = _this.memoArray.map(function (obj) {\n        return obj.id;\n      });\n\n      var maxId = Math.max.apply(null, idLists);\n      var newMemoObj = {\n        title: _this.jsMemoInput[0].value,\n        description: _this.jsMemoInput[1].value,\n        id: _this.memoArray.length === 0 ? 1 : parseInt(maxId) + 1,\n        completed: false\n      };\n\n      if (newMemoObj.title !== "") {\n        // Frontend Process\n        _this.paintMemo(newMemoObj, _this.TODO_FLAG); // Backend Process\n\n\n        _this.memoArray.push(newMemoObj);\n\n        _this.saveMemo(_this.memoArray);\n      } // Update statusBar\n\n\n      new Status(); // Input 값 초기화\n\n      var _ref = ["", ""];\n      _this.jsMemoInput[0].value = _ref[0];\n      _this.jsMemoInput[1].value = _ref[1];\n    }\n  });\n\n  this.jsMemoHeader = document.querySelector("#jsMemoHeader");\n  this.jsMemoBtn = this.jsMemoHeader ? this.jsMemoHeader.querySelector("#jsMemoBtn") : null;\n  this.jsMemoIcon = this.jsMemoBtn ? this.jsMemoBtn.querySelector("#jsMemoIcon") : null;\n  this.jsMemoInputBox = this.jsMemoHeader ? this.jsMemoHeader.querySelector("#jsMemoInputBox") : null;\n  this.jsMemoInput = this.jsMemoInputBox ? this.jsMemoInputBox.querySelectorAll("input") : null;\n  this.jsMemoMain = document.querySelector("#jsMemoMain");\n  this.jsNewMemoSection = this.jsMemoMain ? this.jsMemoMain.querySelector(".memo-section") : null;\n  this.jsMemoMainCompleted = document.querySelector("#jsMemoMainCompleted");\n  this.jsNewMemoSectionCompleted = this.jsMemoMainCompleted ? this.jsMemoMainCompleted.querySelector(".memo-section") : null;\n  this.memoArray = []; // Name\n\n  this.TODOS = "toDos";\n  this.TODO_FLAG = "toDo";\n  this.COMPLETED_FLAG = "completed";\n\n  if (this.jsMemoHeader && this.jsMemoMain) {\n    this.initMemo(); // Btn Styling\n\n    this.jsMemoInput.forEach(function (input) {\n      new Btn(input);\n    }); // BtnAcive Styling\n\n    new BtnActive(this.jsMemoBtn);\n  }\n} // functions\n;\n\nnew Memo();\n;// CONCATENATED MODULE: ./src/client/js/nav.js\nfunction nav_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nav_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n // Class\n\nvar Nav = function Nav() {\n  var _this = this;\n\n  nav_classCallCheck(this, Nav);\n\n  nav_defineProperty(this, "navInit", function () {\n    // Btn 클릭 시 Slider 설정 필요\n    _this.jsNavMemo.addEventListener("click", _this.handleNavMemoClick);\n\n    _this.jsNavLoad.addEventListener("click", _this.handleNavLoadClick);\n  });\n\n  nav_defineProperty(this, "handleNavMemoClick", function () {\n    _this.jsMainContainer.scrollIntoView({\n      behavior: "smooth",\n      block: "start",\n      inline: "nearest"\n    }); // this.jsHeaderContainer.scrollIntoView({\n    //     behavior: "smooth",\n    //     block: "start",\n    //     inline: "nearest",\n    // })\n\n  });\n\n  nav_defineProperty(this, "handleNavLoadClick", function () {\n    _this.jsMainContainer.scrollIntoView({\n      behavior: "smooth",\n      block: "end",\n      inline: "start"\n    }); // this.jsHeaderContainer.scrollIntoView({\n    //     behavior: "smooth",\n    //     block: "end",\n    //     inline: "nearest",\n    // })\n\n  });\n\n  this.jsNavHeader = document.querySelector("#jsNavHeader");\n  this.jsNavContainer = document.querySelector("#jsNavContainer");\n  this.jsNavMemo = this.jsNavContainer.querySelector("#jsNavMemo");\n  this.jsNavLoad = this.jsNavContainer.querySelector("#jsNavLoad");\n  this.jsMainContainer = document.querySelector("#jsMainContainer");\n  this.jsHeaderContainer = this.jsNavHeader.querySelector("#jsHeaderContainer"); // Btn & BtnActive Styling\n\n  new Btn(this.jsNavHeader);\n  new BtnActive(this.jsNavMemo);\n  new BtnActive(this.jsNavLoad); // Functions\n\n  if (this.jsNavContainer && this.jsMainContainer && this.jsHeaderContainer) {\n    this.navInit();\n  }\n};\n\nnew Nav();\n;// CONCATENATED MODULE: ./src/client/js/load.js\nfunction load_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction load_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar Load = function Load() {\n  var _this = this;\n\n  load_classCallCheck(this, Load);\n\n  load_defineProperty(this, "LoadInit", function () {\n    // localStorage에 있는 저장된 데이터 로딩\n    var loadedArray = localStorage.getItem("links");\n    var parsedArray = JSON.parse(loadedArray);\n\n    if (parsedArray) {\n      parsedArray.forEach(function (parsedOne) {\n        var newObj = {\n          name: parsedOne.name,\n          link: parsedOne.link,\n          id: _this.flagArray.length + 1\n        }; // frontend process\n\n        _this.paintLink(newObj);\n\n        _this.flagArray.push(newObj);\n      }); // backend process\n\n      _this.saveLink(_this.flagArray);\n    } // btn에 이벤트 리스너 설정\n\n\n    _this.jsLoadInputBtn.addEventListener("click", _this.handleInputBtnClick);\n  });\n\n  load_defineProperty(this, "paintLink", function (obj) {\n    var _ref = [obj.name, obj.link, obj.id],\n        name = _ref[0],\n        link = _ref[1],\n        id = _ref[2]; // container\n\n    var linkContainer = document.createElement("div");\n    linkContainer.className = "welcome__container";\n    linkContainer.id = id; // icon\n\n    var linkIcon = document.createElement("i");\n    linkIcon.classList.add("fab", "fa-".concat(name), "fa-lg"); // span\n\n    var linkSpan = document.createElement("span");\n    linkSpan.innerHTML = name;\n    linkSpan.style.display = "none";\n    linkContainer.appendChild(linkIcon);\n    linkContainer.appendChild(linkSpan);\n    new BtnActive(linkContainer); // delete Btn\n\n    var deleteBtn = document.createElement("button");\n    deleteBtn.classList.add("btn", "link__btn", "hide");\n    deleteBtn.id = "delBtn";\n    deleteBtn.addEventListener("mousedown", _this.handleDeleteBtnClick);\n    var deleteIcon = document.createElement("i");\n    deleteIcon.classList.add("fas", "fa-trash");\n    deleteBtn.appendChild(deleteIcon);\n    new BtnActive(deleteBtn); // anchor Btn\n\n    var goBtn = document.createElement("a");\n    goBtn.classList.add("btn", "link__btn", "hide");\n    goBtn.id = "goBtn";\n    goBtn.addEventListener("mousedown", function () {\n      goBtn.classList.add("fixed");\n      return location.href = link;\n    });\n    var goIcon = document.createElement("i");\n    goIcon.classList.add("fas", "fa-external-link-alt");\n    goBtn.appendChild(goIcon);\n    new BtnActive(goBtn);\n    linkContainer.appendChild(deleteBtn);\n    linkContainer.appendChild(goBtn);\n    linkContainer.addEventListener("click", _this.handleContainerClick);\n\n    _this.jsLoadResult.appendChild(linkContainer);\n  });\n\n  load_defineProperty(this, "saveLink", function (array) {\n    localStorage.setItem("links", JSON.stringify(array));\n  });\n\n  load_defineProperty(this, "handleInputBtnClick", function (event) {\n    event.preventDefault();\n    var _ref2 = [_this.jsLoadInput[0].value, _this.jsLoadInput[1].value],\n        name = _ref2[0],\n        link = _ref2[1];\n    var newObj = {\n      name: name,\n      link: link,\n      id: _this.flagArray.length + 1\n    };\n    var _ref3 = ["", ""];\n    _this.jsLoadInput[0].value = _ref3[0];\n    _this.jsLoadInput[1].value = _ref3[1];\n\n    // frontend process\n    _this.paintLink(newObj);\n\n    _this.flagArray.push(newObj); // backend process\n\n\n    _this.saveLink(_this.flagArray);\n  });\n\n  load_defineProperty(this, "handleDeleteBtnClick", function (event) {\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    var targetContainer = targetNode.parentNode;\n    var targetId = targetContainer.id; // frontend process\n\n    _this.jsLoadResult.removeChild(targetContainer); // backend process\n\n\n    _this.flagArray = _this.flagArray.filter(function (one) {\n      return one.id !== parseInt(targetId);\n    });\n\n    _this.saveLink(_this.flagArray);\n  });\n\n  load_defineProperty(this, "handleContainerClick", function (event) {\n    var targetNode = event.target;\n\n    if (targetNode.tagName === "I") {\n      targetNode = targetNode.parentNode;\n    }\n\n    var targetDelBtn = targetNode.querySelector("#delBtn");\n    var targetGoBtn = targetNode.querySelector("#goBtn");\n    targetNode.classList.toggle("click");\n\n    if (targetNode.classList.contains("click")) {\n      // Show delBtn\n      // 오류 발생 부분 -> 아마 부모요소 안에 optionBtns를 추가해 클릭 이벤트 중복 때문인 듯\n      targetDelBtn.classList.replace("hide", "show-btn"); // Show goBtn\n\n      targetGoBtn.classList.replace("hide", "show-go-btn");\n    } else {\n      // Hide delbtn\n      targetDelBtn.classList.replace("show-btn", "hide-btn");\n      targetDelBtn.addEventListener("animationend", _this.targetDelBtnHide); // Hide goBtn\n\n      targetGoBtn.classList.replace("show-go-btn", "hide-go-btn");\n      targetGoBtn.addEventListener("animationend", _this.targetGoBtnHide);\n    }\n  });\n\n  load_defineProperty(this, "targetDelBtnHide", function (event) {\n    var targetNode = event.target;\n    targetNode.classList.replace("hide-btn", "hide");\n  });\n\n  load_defineProperty(this, "targetGoBtnHide", function (event) {\n    var targetNode = event.target;\n    targetNode.classList.replace("hide-go-btn", "hide");\n  });\n\n  this.jsLoadContainer = document.querySelector("#jsLoadContainer");\n  this.jsLoadCard = this.jsLoadContainer ? this.jsLoadContainer.querySelector("#jsLoadCard") : null;\n  this.jsLoadInputBox = this.jsLoadCard ? this.jsLoadCard.querySelector("#jsLoadInputBox") : null;\n  this.jsLoadInput = this.jsLoadInputBox ? this.jsLoadInputBox.querySelectorAll("input") : null;\n  this.jsLoadInputBtn = this.jsLoadInputBox ? this.jsLoadInputBox.querySelector("#jsLoadInputBtn") : null;\n  this.jsLoadResult = this.jsLoadCard ? this.jsLoadCard.querySelector("#jsLoadResult") : null;\n  this.flagArray = [];\n\n  if (this.jsLoadContainer) {\n    this.LoadInit(); // Btn Styling\n\n    new Btn(this.jsLoadCard);\n    this.jsLoadInput.forEach(function (input) {\n      new Btn(input);\n    }); // BtnActive Styling\n\n    new BtnActive(this.jsLoadInputBtn);\n  }\n} // Functions\n;\n\nnew Load();\n;// CONCATENATED MODULE: ./src/client/js/form.js\nfunction form_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\nvar Form = function Form() {\n  form_classCallCheck(this, Form);\n\n  this.jsFormContainer = document.querySelector("#jsFormContainer");\n  this.jsFormBtn = this.jsFormContainer ? this.jsFormContainer.querySelector("#jsFormBtn") : null;\n  this.jsFormInput = this.jsFormContainer ? this.jsFormContainer.querySelectorAll(".form__input") : null;\n\n  if (this.jsFormContainer) {\n    // Btn Styling\n    new Btn(this.jsFormContainer);\n    this.jsFormInput.forEach(function (input) {\n      new Btn(input);\n    }); // BtnActive Styling\n\n    new BtnActive(this.jsFormBtn);\n  }\n};\n\nnew Form();\n;// CONCATENATED MODULE: ./src/client/js/profile.js\nfunction profile_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n // CLASS\n\nvar Profile = function Profile() {\n  profile_classCallCheck(this, Profile);\n\n  this.jsSearch = document.querySelector("#jsSearch");\n  this.jsSearchProfile = this.jsSearch ? this.jsSearch.querySelector("#jsSearchProfile") : null;\n  this.jsSearchFriends = this.jsSearch ? this.jsSearch.querySelector("#jsSearchFriends") : null;\n  this.jsCardFriends = this.jsSearchFriends ? this.jsSearchFriends.querySelector("#jsCardFriends") : null;\n  this.jsCardFriendsItem = this.jsCardFriends ? this.jsCardFriends.querySelectorAll(".card-container") : null;\n  this.jsSearchBox = this.jsSearch ? this.jsSearch.querySelector("#jsSearchBox") : null;\n  this.jsSearchBoxInput = this.jsSearchBox ? this.jsSearchBox.querySelector("#jsSearchBoxInput") : null;\n  this.jsSearchBoxBtn = this.jsSearchBox ? this.jsSearchBox.querySelector("#jsSearchBoxBtn") : null;\n  this.jsSearchResult = this.jsSearch ? this.jsSearch.querySelector("#jsSearchResult") : null;\n  this.jsSearchResultContainer = this.jsSearchResult ? this.jsSearchResult.querySelector("#jsSearchResultContainer") : null;\n  this.jsSearchResultContainerCard = this.jsSearchResultContainer ? this.jsSearchResultContainer.querySelectorAll(".search-result__card") : null;\n\n  if (this.jsSearchProfile) {\n    // Btn Styling\n    new Btn(this.jsSearchProfile);\n    new Btn(this.jsSearchFriends);\n    new Btn(this.jsSearchBox);\n    new Btn(this.jsSearchBoxInput); // BtnActive Styling\n\n    new BtnActive(this.jsSearchBoxBtn);\n    this.jsSearchResultContainerCard.forEach(function (card) {\n      new BtnActive(card);\n    });\n    this.jsCardFriendsItem.forEach(function (item) {\n      new Btn(item);\n    });\n  }\n};\n\nnew Profile();\n;// CONCATENATED MODULE: ./src/client/js/main.js\n // COMPONENTS\n\n\n // MAIN JS\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48\n')}},__webpack_exports__={};__webpack_modules__[48]()})();